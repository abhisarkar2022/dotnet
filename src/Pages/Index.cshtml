@page 
@using System.Runtime.InteropServices
@using System.IO
@using System.Diagnostics
@using System.Net
@using System.Net.Sockets
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    var process = Process.GetCurrentProcess();
    var hostname = Dns.GetHostName(); // get container id
    var ipAddress = Dns.GetHostEntry(hostname).AddressList.FirstOrDefault(x => x.AddressFamily == AddressFamily.InterNetwork);
    var activeProcess = Process.GetCurrentProcess();
    @* var memoryUsed = activeProcess.WorkingSet64 / (1024 * 1024);
    var memoryMaxAvailable = (long)activeProcess.MaxWorkingSet / (1024 * 1024);  *@
}

<div>
    <h5>Revision2</h5>
    <h5 class="text-center">Hosting Environment Details</h5>
    <table width="500" align="center" class="table-striped table-hover">
        <tr>
            <td>App Framework</td>
            <td>@RuntimeInformation.FrameworkDescription</td>
        </tr>
        <tr>
            <td>Operating System</td>
            <td>@RuntimeInformation.OSDescription</td>
        </tr>
    </table>  
    
    <h5 class="text-center">App Settings Details</h5>
    <table width="500" align="center" class="table-striped table-hover">
        <tr>
            <td>App Config Env</td>
            <td>@Configuration["AppConfig:AppSettings"]</td>
        </tr>
    </table>

    <h5 class="text-center">Server Details</h5>
    <table width="500" align="center" class="table-striped table-hover">
        <tr>
            <td>Containerized</td>
            <td>@(Environment.GetEnvironmentVariable("DOTNET_RUNNING_IN_CONTAINER") is object ? "true" : "false")</td>
        </tr>
        <tr>
            <td>IP Address</td>
            <td>@ipAddress</td>
        </tr>
        <tr>
            <td>Host Name</td>
            <td>@hostname</td>
        </tr>
        <tr>
            <td>CPU cores</td>
            <td>@Environment.ProcessorCount</td>
        </tr>
        @if (RuntimeInformation.OSDescription.StartsWith("Linux") && Directory.Exists("/sys/fs/cgroup/memory"))
        {
            <tr>
                <td>cgroup memory usage</td>
                <td>@System.IO.File.ReadAllLines("/sys/fs/cgroup/memory/memory.usage_in_bytes")[0]</td>
            </tr>
        }
        <tr>
            <td>Memory, current usage (bytes)</td>
            <td>@process.WorkingSet64</td>
        </tr>
        <tr>
            <td>Memory, max available (bytes)</td>
            <td>@process.MaxWorkingSet</td>
        </tr>
    </table>
</div>
